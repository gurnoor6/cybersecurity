from Crypto.Util.number import *
import numpy as np
import math

def gaussianreduction(v1,v2):
	x = v1.dot(v1)
	y = v2.dot(v2)
	if y<x:
		v1,v2=v2,v1
	m = int(np.dot(v1,v2)/(v1.dot(v1)))
	if m==0:
		return v1,v2
	v2 = v2 - np.multiply(m,v1)
	return gaussianreduction(v1,v2)

h= 2163268902194560093843693572170199707501787797497998463462129592239973581462651622978282637513865274199374452805292639586264791317439029535926401109074800
q= 7638232120454925879231554234011842347641017888219021175304217358715878636183252433454896490677496516149889316745664606749499241420160898019203925115292257
e = 5605696495253720664142881956908624307570671858477482119657436163663663844731169035682344974286379049123733356009125671924280312532755241162267269123486523
v = np.array((1, h))
w = np.array((0, q))

x,y = gaussianreduction(v,w)
f = x[0]
g = x[1]

a = (f*e)%q
m = (a*inverse(f, g)) % g
print(long_to_bytes(m))